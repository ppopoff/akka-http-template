apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'application'


ext {
    scalaVersionMajor = '2.12'
    scalaVersionFull  = '2.12.0'
    logbackVersion = '1.1.7'
}


repositories {
    mavenCentral()
}


// Settings for application plugin
mainClassName = 'com.doingfp.rest.App'


dependencies {
    // scala library
    compile group: 'org.scala-lang', name: 'scala-library', version: "$scalaVersionFull"

    // dependency injection
    compile group: 'org.scaldi', name: "scaldi_$scalaVersionMajor", version: '0.5.8'
    compile group: 'org.scaldi', name: "scaldi-akka_$scalaVersionMajor", version: '0.5.8'

    // akka-http
    compile group: 'com.typesafe.akka', name: "akka-http_$scalaVersionMajor", version: '10.0.0'


    // json
    // TODO: add json support here

    // logging
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: "$logbackVersion"
    compile group: 'ch.qos.logback', name: 'logback-core', version: "$logbackVersion"
    compile group: 'com.typesafe.scala-logging', name: "scala-logging_$scalaVersionMajor", version: '3.5.0'

    // test dependencies
    testCompile group: 'org.scalacheck', name: "scalacheck_$scalaVersionMajor", version: '1.13.4'
    testCompile group: 'org.scalatest', name: "scalatest_$scalaVersionMajor", version: '3.0.1'
    testCompile group: 'org.scalactic', name: "scalactic_$scalaVersionMajor", version: '3.0.1'
    testCompile 'junit:junit:4.12'
}



/* The task is defined to eliminate the ambiguity.
 * after you invoke 'compile' the source code will be
 * compiled as Scala prject
 */
task compile (dependsOn: 'compileScala') {
    description "Compiles scala project"
}

task wrapper (type: Wrapper) {
    description "Creates gradle wrapper, for systems that don't have gradle installed"
    gradleVersion = '3.1'
    distributionUrl = "http://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

